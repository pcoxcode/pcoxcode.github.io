---
import {FASTBALL, CHANGEUP, SLIDER, SPLITER,CURVE,TWELVESIXCURVE } from "../../scripts/PitchSelect.js"

export interface Props {
    title: string;
    sport: string; 
}

const {title, sport} = Astro.props;
---

<div class="select-group">
    <button class="button" id="button">
        <span id="select-label-pitch">  Please Select {title}</span>
    </button>
</div>

<div class="grid-pitches">   
    <div class="select-hand" data-pitch="Right">Right</div>
    <div class="select-hand" data-pitch="Left">Left</div>
    <div id={FASTBALL} class="pitch-cell option-pitch" data-pitch="Fastball">Fastball</div>
    <div id={SLIDER} class="pitch-cell option-pitch" data-pitch="Slider">Slider</div>
    <div id={CHANGEUP}class="pitch-cell option-pitch" data-pitch="Change-up">Change Up</div>
    <div id={CURVE} class="pitch-cell option-pitch" data-pitch="Curve">Curve</div>
    <div id={SPLITER} class="pitch-cell option-pitch" data-pitch="Spliter">Spliter</div>
    <div id={TWELVESIXCURVE} class="pitch-cell option-pitch" data-pitch="12-6Curve">12-6 Curve</div>
    
</div>

<script >
import {CLICK, rightHandClockPositions, selectOptions,convertClockPositions}  from "../../scripts/PitchSelect.js"

import { toggleHiddenSpeed } from "../../scripts/SpeedSelection.js";
const pitchSelect = document.querySelectorAll('.pitch-cell');
const button = document.querySelector('#button')
const pitchOptions = document.querySelectorAll('.option-pitch')
const selectLabel = document.querySelector('#select-label-pitch')
const selectHandedness = document.querySelectorAll('.select-hand')

    
const setSelectTitle = (event) => {
    const divElement = document.querySelector(`div[id="${event.target.id}"]`).textContent
    selectLabel.innerText = divElement
    }
    
pitchSelect.forEach(pitch => selectOptions(pitchSelect,pitch))
selectHandedness.forEach(hand => selectOptions(selectHandedness,hand))


pitchOptions.forEach(option => {
    option.addEventListener(CLICK, event => {
        setSelectTitle(event)
        toggleHiddenSpeed()
        
    })
})

button.addEventListener(CLICK, function(event){
    const handselect = convertClockPositions(rightHandClockPositions)
    console.log(handselect)
})
</script>

<style>

    label{
        display: flex;
        padding: 2rem 0 0.5rem;
    }
    .select-group{
        position: relative;
    }


    .option-pitch{
        display: none;
    }

    .drop-down{
        border: 2px solid #3e8e41;
        border-radius: .3rem;
        position: absolute;
        width: 100%;
        box-sizing: border-box;

    }
    .select-item{
        background-color: white;
        padding: 1rem;
        color: black;
    }
    .select-item:hover{
        background-color: #ecd2ff;
    }
    .hidden-pitch{
        display: none;
    }
	.grid-pitches{
        display: grid;
        grid-template-columns: repeat(2,1fr);
        position: relative;
        gap: 1rem;
        max-width: fit-content;
        margin-top: 1rem;
    }
    
    .select-hand, .pitch-cell{
        list-style: none;
		display: flex;
		padding: 0.25rem;
		background-color: white;
		background-image: none;
		background-size: 400%;
		border-radius: 0.6rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
        justify-content: center;
    }
    .select-hand:hover,.pitch-cell:hover{
        background-color: #b6b6f9;
    }

    .active{
        background-color: #3e8e41;
    }
 
    h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: #444;
	}
	.button:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.button:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}

    .dropdown {
        position: relative;
      }
      
    
</style>
