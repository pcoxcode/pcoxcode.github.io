---

const {title, sport} = Astro.props;

export interface Props {
    title: string;
    sport: string; 
}

---


<div class="select-group">
    <!--<label for="button"> What {title} would you like? </label>-->
    <button class="button" id="button-zone">
        <span id="select-label-zone">  Please Select {title}</span>

    </button>
    
    <div id="drop-down-zone" class="drop-down hidden-zone">
        <label class="select-item" for="select-zone-1">1</label>
        <input class="option-zone" id="select-zone-1" type="radio" name="zone" value="zone-1">
        <label class="select-item" for="select-zone-2">2</label>
        <input class="option-zone" id="select-zone-2" type="radio" name="zone" value="zone-2">
        <label class="select-item" for="select-zone-3">3</label>
        <input class="option-zone" id="select-zone-3" type="radio" name="zone" value="zone-3">
        <label class="select-item" for="select-zone-4">4</label>
        <input class="option-zone" id="select-zone-4" type="radio" name="zone" value="zone-4">
        <label class="select-item" for="select-zone-5">5</label>
        <input class="option-zone" id="select-zone-5" type="radio" name="zone" value="zone-5">
        <label class="select-item" for="select-zone-6">6</label>
        <input class="option-zone" id="select-zone-6" type="radio" name="zone" value="zone-6">
        <label class="select-item" for="select-zone-7">7</label>
        <input class="option-zone" id="select-zone-7" type="radio" name="zone" value="zone-7">
        <label class="select-item" for="select-zone-8">8</label>
        <input class="option-zone" id="select-zone-8" type="radio" name="zone" value="zone-8">
        <label class="select-item" for="select-zone-9">9</label>
        <input class="option-zone" id="select-zone-9" type="radio" name="zone" value="zone-9">
    </div>
</div>

<script>
    
    const buttonZone = document.querySelector('#button-zone')


    const selectZone = document.querySelector('#drop-down-zone')


    const zoneOptions = document.querySelectorAll('.option-zone')
    
    
    const selectLabelZone = document.querySelector('#select-label-zone')

    buttonZone.addEventListener('click', function(event){
        event.preventDefault()
        toggleHiddenZone()

    })

    function toggleHiddenZone(){
        selectZone.classList.toggle('hidden-zone')
    }
    
    zoneOptions.forEach(function(option){
        option.addEventListener('click',
        function(event){
            setSelectTitleZone(event)            
        })
    })
    function setSelectTitleZone(event){
        const labelElement = document.querySelector(`label[for="${event.target.id}"]`).innerText
        console.log(labelElement)
        selectLabelZone.innerText = labelElement;
        toggleHiddenZone()
    }

</script>

<style>

    label{
        display: block;
        padding: 2rem 0 0.5rem;
    }
    .select-group{
        position: relative;
    }


    .option-zone{
        display: none;
    }

    .drop-down{
        border: 2px solid #3e8e41;
        border-radius: .3rem;
        position: absolute;
        width: 100%;
        box-sizing: border-box;

    }
    .select-item{
        background-color: white;
        padding: 1rem;
        color: black;
    }
    .select-item:hover{
        background-color: #ecd2ff;
    }
    .hidden-zone{
        display: none;
    }

    .section{
        list-style: none;
		display: flex;
		padding: 0.25rem;
		background-color: white;
		background-image: none;
		background-size: 400%;
		border-radius: 0.6rem;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
    }
 
    h2 {
		margin: 0;
		font-size: 1.25rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	p {
		margin-top: 0.5rem;
		margin-bottom: 0;
		color: #444;
	}
	.button:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.button:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent));
	}
	
   
      /* The container <div> - needed to position the dropdown content */
    .dropdown {
        position: relative;
      }
      
    
</style>
